function ProtocolBatchTemplate = readProtocBatchXLS(workbookFile, sheetName, dataLines)
%IMPORTFILE Import data from a spreadsheet
%  PROTOCOLBATCHTEMPLATE = IMPORTFILE(FILE) reads data from the first
%  worksheet in the Microsoft Excel spreadsheet file named FILE.
%  Returns the data as a table.
%
%  PROTOCOLBATCHTEMPLATE = IMPORTFILE(FILE, SHEET) reads from the
%  specified worksheet.
%
%  PROTOCOLBATCHTEMPLATE = IMPORTFILE(FILE, SHEET, DATALINES) reads from
%  the specified worksheet for the specified row interval(s). Specify
%  DATALINES as a positive scalar integer or a N-by-2 array of positive
%  scalar integers for dis-contiguous row intervals.
%
%  Example:
%  ProtocolBatchTemplate = importfile("C:\Users\Konrad\Documents\MATLAB\fNIRS\2022_StimCrtlGui\ProtocolBatchTemplate.xlsx", "Tabelle1", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 16-Nov-2023 12:17:00

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 2
    dataLines = [2, Inf];
end

%% Set up the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 9);

% Specify sheet and range
opts.Sheet = sheetName;
opts.DataRange = dataLines(1, :);

% Specify column names and types
opts.VariableNames = ["Time", "Type", "Channels", "Amplitude", "PulseWidth", "Duration", "Freq", "BurstPulseCount", "BurstFreq"];
opts.VariableTypes = ["char", "string", "char", "double", "double", "double", "double", "double", "double"];

% Specify variable properties
opts = setvaropts(opts, ["Time", "Type", "Channels"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["Time", "Type", "Channels"], "EmptyFieldRule", "auto");

% Import the data
ProtocolBatchTemplate = readtable(workbookFile, opts, "UseExcel", false);

for idx = 2:size(dataLines, 1)
    opts.DataRange = dataLines(idx, :);
    tb = readtable(workbookFile, opts, "UseExcel", false);
    ProtocolBatchTemplate = [ProtocolBatchTemplate; tb]; %#ok<AGROW>
end

end